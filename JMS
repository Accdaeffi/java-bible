API, позволяющее отправку сообщений в другие приложения - обычно Java, но не всегда.
Как JPA - спецификация и требует реализации, например, Apache Active MQ, RabbitMQ или JBoss Messaging.

Асинхронно, быстро, гибко (можно одному, а можно броадкаст), безопасно, надёжно.

Типы сообщений:
Point to Point - лишь один получатель. Работает через очередь. Может быть несколько консумеров, но придёт лишь раз.
Publish/Subscribe - отправляется всем, кто подписан на определённый топик. 

Сообщение содержит:
Header - метаданные о сообщении
Properties - в 3 секциях:
  Application - от приложения
  Provider - от провайдера (специфичны)
  Standart Properties - (могут вообще не поддерживаться)
Payload - само сообщение

Некоторые параметры из Header:
JMSCorrelationID - строчка, UUID, позволяет проследить сообщение через множество потребителей.
JMSExpires - Long, как долго будет жить. Если 0 - будет жить вечно.
JMSMessageID - строчка, ставится провайдером
JMSPriority - Integer, приоритет
JMSTimestamp - Long, когда было послано
JMSType - строчка, тип сообщения
JMSReplyTo - queue или топик, на который отправитель ожидает ответы
JMSRedelivery - было ли перенаправлено?
JMSDevileryMode - Integer, ставится провайдером.
  Persistent (дефолтный) - гарантировать доставку.
  Non-persistent - потери это норма.
  
Параметры из Properties:
Провайдера:
  JMSXUserID - String - id пользователя, пославшего сообщение
  JMSXAppID - String - id приложения, отправляющего сообщение
  JMSXDeliveryCount - Integer - количество попыток доставки
  JMSXConsumerTXID - String - id транзакции, в рамках которой сообщение было получено
  JMSXRcvTimestamp - Long - когда именно сообщение было получено
  JMSXState - Integer - состояние сообщения
Клиента:
  JMSXGroupID - String - к какой группе принадлежит сообщение
  JMSXGroupSeq - Integer - номер сообщения в группе
Продюсера:  
  JMSXProducerTXID - String - id транзакции, в рамках которой было создано сообщение
  
Кастомные параметры - ставятся String/что-то.

Типы сообщений:
Message - пустое, просто сообщить о событии
BytesMessage - массив байтов
TextMessage - содержит строку (можно JSON или XML) - лучше всего использовать это
StreamMessage - последовательность примитивов
MapMessage - содержит нечто аля Map
ObjectMessage - сериализированный объект

Для класса сообщений надо имплементировать Serializable и, желательно, указать serialVersionUID.



